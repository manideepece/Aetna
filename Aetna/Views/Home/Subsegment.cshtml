
@{
    ViewBag.Title = "Region";
    Layout = "~/Views/Shared/_AetnaLayout.cshtml";
}
@using Newtonsoft.Json;

<style>

    .container {
        color: black !important;

    }

    .k-grid{
        top: 100px;
    }

    .k-tooltip-error{
        background-color:white;
        color: red;
    }

    .table th, table td {
        text-align: left;
    }
</style>

<div id="example">
    <div id="grid"></div>

    <script>
        var rowData = null;
        $(document).ready(function () {
            $("#lblTitle").text('Subsegment Maintenance');
            $.ajax({
                type: "GET",
                url: "/Home/GetSubsegmentList",
                data: {},
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    bindGrid(result);
                }
            });
        });
        function reloadGridData() {
            $.ajax({
                type: "GET",
                url: "/Home/GetSubsegmentList",
                data: {},
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var grid = $("#grid").data("kendoGrid");
                    grid.destroy();
                    $("#grid").empty();
                    bindGrid(result);
                }
            });
        }
        function deleteItem(e) {
            var subsegmentIds = [];
            var grid = $("#grid").data("kendoGrid");
            $('#grid input:checked.select-item').each(function () {
                var dataItem = grid.dataItem($(this).closest('tr'));
                subsegmentIds.push(dataItem.SUB_SEGMENT_ID);
            })
            if (confirm('Are you sure you want to delete selected rows? ')) {
                $.ajax({
                    type: "GET",
                    url: "/Home/DeleteSubsegment",
                    data: { subsegmentId: subsegmentIds.join(',') },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        alert(result);
                        var grid = $("#grid").data("kendoGrid");
                        reloadGridData()
                        $("a.k-button.k-button-icontext.k-grid-Save").text("Save");
                    }
                });

            }
        }
        function bindGrid(gridData) {
            var grid = $("#grid").kendoGrid({
                dataSource: {
                    data: gridData,
                    schema: {
                        model: {
                            id: "SUB_SEGMENT_ID",
                            fields: {
                                SUB_SEGMENT_ID: { type: "number", editable: false, nullable: true },
                                SUB_SEGMENT_CD: {
                                    validation: {
                                        required: { message: "Subsegment Code is required" },
                                        maxlength:
                                            function (input) {
                                                if (input.val().length > 5) {
                                                    input.attr("data-maxlength-msg", "Subsegment Code cannot be more than 5 characters");
                                                    return false;
                                                }
                                                return true;
                                            }
                                    }
                                },
                                SUB_SEGMENT_DESCR: {
                                    validation: {
                                        required: { message: "Subsegment Description is required" },
                                        maxlength:
                                            function (input) {
                                                if (input.val().length > 30) {
                                                    input.attr("data-maxlength-msg", "Subsegment Description cannot be more than 30 characters");
                                                    return false;
                                                }
                                                return true;
                                            }
                                    }
                                },
                                CREAT_BY_ID: { editable: false, validation: { required: false } },
                                CREAT_TMSTMP: {
                                    editable: false, type: "date", validation: { required: false }
                                }
                            }
                        }
                    }
                },
                pageable: {
                    pageSize: 20
                },
                filterable: {
                    mode: "row"
                },
                change: onSelectCell,
                edit: onEdit,
                navigatable: true,
                selectable: true,
                sortable: true,
                filterMenuInit: false,
                height: 550,

                    toolbar: [{
                        name: 'new',
                        text: "Add Subsegment"
                    },
                    {
                        text: "Save"
                        },
                        {
                            text: "Refresh",
                        },
                        {
                            text: "Delete",
                        }
                ],
                columns: [
                    {
                        field: "",
                        title: "<input id='chkAll' class='checkAllCls' type='checkbox'/>",
                        width: "5%", filterable: false,
                        template: "<input type='checkbox' class='select-item' />"
                    },
                    {
                        field: "SUB_SEGMENT_ID", headerAttributes: {
                            "class": "table-header-cell",
                            style: "text-align: center;font-weight: bold;"
                        }, title: "Subsegment Id", hidden: true
                    },
                    {
                        field: "SUB_SEGMENT_CD", headerAttributes: {
                            "class": "table-header-cell",
                            style: "text-align: center;font-weight: bold;"
                        }, title: "Subsegment Code*"
                    },
                    {
                        field: "SUB_SEGMENT_DESCR", headerAttributes: {
                            "class": "table-header-cell",
                            style: "text-align: center;font-weight: bold;"
                        }, title: "Subsegment Description*"
                    },
                    {
                        field: "CREAT_BY_ID", headerAttributes: {
                            "class": "table-header-cell",
                            style: "text-align: center;font-weight: bold;"
                        }, title: "Updated By"
                    },
                    {
                        field: "CREAT_TMSTMP", headerAttributes: {
                            "class": "table-header-cell",
                            style: "text-align: center;font-weight: bold;"
                        }, title: "Updated On", filterable: false, format: "{0: MM-dd-yyyy}"
                    },
                    //{ command: { text: "Remove", click: deleteItem }, title: " ", width: "180px" }
                ],
                editable: "inline"
            });

            $(".k-grid-Delete").click(function (e) {
                deleteItem();
            })
            $(".checkAllCls").on("click", function () {
                var ele = this;
                var state = $(ele).is(':checked');
                var grid = $('#grid').data('kendoGrid');
                if (state == true) {
                    $('.select-item').prop('checked', true)
                    $(".k-grid-Delete").removeAttr("disabled");
                }
                else {
                    $('.select-item').prop('checked', false)
                    $(".k-grid-Delete").attr('disabled', 'disabled');
                }
            });
            $(".select-item").change(function () {
                if ($(".select-item:checked").length > 0) {
                    $(".k-grid-Delete").removeAttr("disabled");
                }
                else {
                    $(".k-grid-Delete").attr('disabled', 'disabled');
                }
            })
            $(".k-pager-nav,.k-pager-numbers-wrap").click(function () {
                $(".checkAllCls").prop('checked', false);
            });
            $(".k-grid-new").click(function (e) {
                $(this).attr('disabled', 'disabled');
                $(".k-grid-Save").removeAttr("disabled");
                var grid = $("#grid").data("kendoGrid");
                grid.addRow();
                $("#grid tbody tr").eq(0).addClass("selectedRow");
                $("a.k-button.k-button-icontext.k-grid-Save").text("Save");
                return false;

            });
            $(".k-grid-Refresh").click(function (e) {
                reloadGridData();
            })
            $("#grid tbody").on("dblclick", "td", function (e) {
                $(".k-grid-Save").removeAttr("disabled");
                $(".k-grid-new").attr('disabled', 'disabled');
                $(".k-grid-Delete").attr('disabled', 'disabled');
                var cellElement = this;
                var cell = $(cellElement);
                var grid = $("#grid").getKendoGrid();
                grid.editCell(cell);
                $("a.k-button.k-button-icontext.k-grid-Save").text("Update");
            });
            $(".k-grid-Save").attr("disabled", "disabled");
            $(".k-grid-Delete").attr("disabled", "disabled");
            $(".k-grid-Save").bind('click', function (e) {
                var grid = $("#grid").data("kendoGrid");
                var dataItem = grid.dataItem($("#grid tbody tr.selectedRow"));
                grid.saveRow();
                if (dataItem.SUB_SEGMENT_CD != "" && dataItem.SUB_SEGMENT_DESCR != "") {
                    $.ajax({
                        type: "GET",
                        url: "/Home/UpdateSubsegment",
                        data: { subsegmentId: dataItem.SUB_SEGMENT_ID, subsegmentCode: dataItem.SUB_SEGMENT_CD, subsegmentDescription: dataItem.SUB_SEGMENT_DESCR },
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            alert(result);
                            //grid.dataSource.read();
                            //grid.sync();
                            //grid.refresh();
                            reloadGridData();
                        }
                    });
                }
            });

            function onSelectCell(e) {
                var grid = e.sender;
                var cellIndex = grid.select().index();
                var selectedtd = grid.select();
                var selectedtr = grid.select().closest("tr");

                $(selectedtr).eq(0).siblings().removeClass("selectedRow");
                $(selectedtr).eq(0).siblings().removeClass("selected");
                $(selectedtr).eq(0).removeClass("k-state-selected");
                $(selectedtr).eq(0).addClass("selectedRow");
                $(selectedtr).eq(0).addClass("selected");
                rowData = grid.dataItem(selectedtr);
            }

            function onEdit(arg) {
                arg.container.find("input[name='SUB_SEGMENT_CD']").attr('maxlength', '5');
                arg.container.find("input[name='SUB_SEGMENT_DESCR']").attr('maxlength', '30');
            }
        }

    </script>
</div>

